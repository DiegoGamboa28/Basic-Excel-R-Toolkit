// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: variable.proto

#include "variable.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace BERTBuffers {
class ComplexDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Complex>
      _instance;
} _Complex_default_instance_;
class ArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Array>
      _instance;
} _Array_default_instance_;
class ErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Error>
      _instance;
} _Error_default_instance_;
class SheetReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SheetReference>
      _instance;
} _SheetReference_default_instance_;
class VariableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Variable>
      _instance;
  bool nil_;
  bool missing_;
  const ::BERTBuffers::Error* err_;
  double num_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  bool boolean_;
  const ::BERTBuffers::Complex* cpx_;
  const ::BERTBuffers::Array* arr_;
  const ::BERTBuffers::SheetReference* ref_;
  ::google::protobuf::uint64 external_pointer_;
} _Variable_default_instance_;
class CodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Code>
      _instance;
} _Code_default_instance_;
class FunctionCallDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FunctionCall>
      _instance;
} _FunctionCall_default_instance_;
class COMFunctionCallDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<COMFunctionCall>
      _instance;
} _COMFunctionCall_default_instance_;
class ConsoleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Console>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::google::protobuf::internal::ArenaStringPtr prompt_;
} _Console_default_instance_;
class CallResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CallResponse>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr err_;
  const ::BERTBuffers::Variable* result_;
  const ::BERTBuffers::Console* console_;
  const ::BERTBuffers::Code* code_;
  ::google::protobuf::internal::ArenaStringPtr shell_command_;
  ::google::protobuf::internal::ArenaStringPtr control_message_;
  const ::BERTBuffers::FunctionCall* function_call_;
  const ::BERTBuffers::COMFunctionCall* com_callback_;
} _CallResponse_default_instance_;
}  // namespace BERTBuffers
namespace protobuf_variable_2eproto {
void InitDefaultsComplexImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::BERTBuffers::_Complex_default_instance_;
    new (ptr) ::BERTBuffers::Complex();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::Complex::InitAsDefaultInstance();
}

void InitDefaultsComplex() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComplexImpl);
}

void InitDefaultsArrayImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_variable_2eproto::InitDefaultsError();
  protobuf_variable_2eproto::InitDefaultsComplex();
  protobuf_variable_2eproto::InitDefaultsSheetReference();
  {
    void* ptr = &::BERTBuffers::_Array_default_instance_;
    new (ptr) ::BERTBuffers::Array();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::BERTBuffers::_Variable_default_instance_;
    new (ptr) ::BERTBuffers::Variable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::Array::InitAsDefaultInstance();
  ::BERTBuffers::Variable::InitAsDefaultInstance();
}

void InitDefaultsArray() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsArrayImpl);
}

void InitDefaultsErrorImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::BERTBuffers::_Error_default_instance_;
    new (ptr) ::BERTBuffers::Error();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::Error::InitAsDefaultInstance();
}

void InitDefaultsError() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsErrorImpl);
}

void InitDefaultsSheetReferenceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::BERTBuffers::_SheetReference_default_instance_;
    new (ptr) ::BERTBuffers::SheetReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::SheetReference::InitAsDefaultInstance();
}

void InitDefaultsSheetReference() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSheetReferenceImpl);
}

void InitDefaultsCodeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::BERTBuffers::_Code_default_instance_;
    new (ptr) ::BERTBuffers::Code();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::Code::InitAsDefaultInstance();
}

void InitDefaultsCode() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCodeImpl);
}

void InitDefaultsFunctionCallImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_variable_2eproto::InitDefaultsArray();
  {
    void* ptr = &::BERTBuffers::_FunctionCall_default_instance_;
    new (ptr) ::BERTBuffers::FunctionCall();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::FunctionCall::InitAsDefaultInstance();
}

void InitDefaultsFunctionCall() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFunctionCallImpl);
}

void InitDefaultsCOMFunctionCallImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_variable_2eproto::InitDefaultsArray();
  {
    void* ptr = &::BERTBuffers::_COMFunctionCall_default_instance_;
    new (ptr) ::BERTBuffers::COMFunctionCall();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::COMFunctionCall::InitAsDefaultInstance();
}

void InitDefaultsCOMFunctionCall() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCOMFunctionCallImpl);
}

void InitDefaultsConsoleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::BERTBuffers::_Console_default_instance_;
    new (ptr) ::BERTBuffers::Console();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::Console::InitAsDefaultInstance();
}

void InitDefaultsConsole() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsConsoleImpl);
}

void InitDefaultsCallResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_variable_2eproto::InitDefaultsArray();
  protobuf_variable_2eproto::InitDefaultsConsole();
  protobuf_variable_2eproto::InitDefaultsCode();
  protobuf_variable_2eproto::InitDefaultsFunctionCall();
  protobuf_variable_2eproto::InitDefaultsCOMFunctionCall();
  {
    void* ptr = &::BERTBuffers::_CallResponse_default_instance_;
    new (ptr) ::BERTBuffers::CallResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BERTBuffers::CallResponse::InitAsDefaultInstance();
}

void InitDefaultsCallResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCallResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Complex, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Complex, r_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Complex, i_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Array, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Array, rows_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Array, cols_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Array, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Array, rownames_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Array, colnames_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Error, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Error, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Error, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::SheetReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::SheetReference, start_row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::SheetReference, start_column_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::SheetReference, end_row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::SheetReference, end_column_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::SheetReference, sheet_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Variable, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Variable, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::BERTBuffers::VariableDefaultTypeInternal, nil_),
  offsetof(::BERTBuffers::VariableDefaultTypeInternal, missing_),
  offsetof(::BERTBuffers::VariableDefaultTypeInternal, err_),
  offsetof(::BERTBuffers::VariableDefaultTypeInternal, num_),
  offsetof(::BERTBuffers::VariableDefaultTypeInternal, str_),
  offsetof(::BERTBuffers::VariableDefaultTypeInternal, boolean_),
  offsetof(::BERTBuffers::VariableDefaultTypeInternal, cpx_),
  offsetof(::BERTBuffers::VariableDefaultTypeInternal, arr_),
  offsetof(::BERTBuffers::VariableDefaultTypeInternal, ref_),
  offsetof(::BERTBuffers::VariableDefaultTypeInternal, external_pointer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Variable, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Variable, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Code, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Code, line_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::FunctionCall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::FunctionCall, function_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::FunctionCall, arguments_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::COMFunctionCall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::COMFunctionCall, function_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::COMFunctionCall, pointer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::COMFunctionCall, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::COMFunctionCall, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::COMFunctionCall, arguments_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Console, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Console, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::BERTBuffers::ConsoleDefaultTypeInternal, text_),
  offsetof(::BERTBuffers::ConsoleDefaultTypeInternal, err_),
  offsetof(::BERTBuffers::ConsoleDefaultTypeInternal, prompt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::Console, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::CallResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::CallResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::CallResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::CallResponse, wait_),
  offsetof(::BERTBuffers::CallResponseDefaultTypeInternal, err_),
  offsetof(::BERTBuffers::CallResponseDefaultTypeInternal, result_),
  offsetof(::BERTBuffers::CallResponseDefaultTypeInternal, console_),
  offsetof(::BERTBuffers::CallResponseDefaultTypeInternal, code_),
  offsetof(::BERTBuffers::CallResponseDefaultTypeInternal, shell_command_),
  offsetof(::BERTBuffers::CallResponseDefaultTypeInternal, control_message_),
  offsetof(::BERTBuffers::CallResponseDefaultTypeInternal, function_call_),
  offsetof(::BERTBuffers::CallResponseDefaultTypeInternal, com_callback_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BERTBuffers::CallResponse, operation_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::BERTBuffers::Complex)},
  { 7, -1, sizeof(::BERTBuffers::Array)},
  { 17, -1, sizeof(::BERTBuffers::Error)},
  { 24, -1, sizeof(::BERTBuffers::SheetReference)},
  { 34, -1, sizeof(::BERTBuffers::Variable)},
  { 51, -1, sizeof(::BERTBuffers::Code)},
  { 57, -1, sizeof(::BERTBuffers::FunctionCall)},
  { 64, -1, sizeof(::BERTBuffers::COMFunctionCall)},
  { 74, -1, sizeof(::BERTBuffers::Console)},
  { 83, -1, sizeof(::BERTBuffers::CallResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_Complex_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_Array_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_Error_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_SheetReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_Variable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_Code_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_FunctionCall_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_COMFunctionCall_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_Console_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::BERTBuffers::_CallResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "variable.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016variable.proto\022\013BERTBuffers\"\037\n\007Complex"
      "\022\t\n\001r\030\001 \001(\001\022\t\n\001i\030\002 \001(\001\"l\n\005Array\022\014\n\004rows\030"
      "\001 \001(\005\022\014\n\004cols\030\002 \001(\005\022#\n\004data\030\003 \003(\0132\025.BERT"
      "Buffers.Variable\022\020\n\010rownames\030\004 \003(\t\022\020\n\010co"
      "lnames\030\005 \003(\t\">\n\005Error\022$\n\004type\030\001 \001(\0162\026.BE"
      "RTBuffers.ErrorType\022\017\n\007message\030\002 \001(\t\"p\n\016"
      "SheetReference\022\021\n\tstart_row\030\001 \001(\r\022\024\n\014sta"
      "rt_column\030\002 \001(\r\022\017\n\007end_row\030\003 \001(\r\022\022\n\nend_"
      "column\030\004 \001(\r\022\020\n\010sheet_id\030\005 \001(\004\"\247\002\n\010Varia"
      "ble\022\r\n\003nil\030\001 \001(\010H\000\022\021\n\007missing\030\002 \001(\010H\000\022!\n"
      "\003err\030\003 \001(\0132\022.BERTBuffers.ErrorH\000\022\r\n\003num\030"
      "\004 \001(\001H\000\022\r\n\003str\030\005 \001(\tH\000\022\021\n\007boolean\030\006 \001(\010H"
      "\000\022#\n\003cpx\030\007 \001(\0132\024.BERTBuffers.ComplexH\000\022!"
      "\n\003arr\030\010 \001(\0132\022.BERTBuffers.ArrayH\000\022*\n\003ref"
      "\030\t \001(\0132\033.BERTBuffers.SheetReferenceH\000\022\032\n"
      "\020external_pointer\030\n \001(\004H\000\022\014\n\004name\030\017 \001(\tB"
      "\007\n\005value\"\024\n\004Code\022\014\n\004line\030\001 \003(\t\"J\n\014Functi"
      "onCall\022\020\n\010function\030\001 \001(\t\022(\n\targuments\030\002 "
      "\003(\0132\025.BERTBuffers.Variable\"\222\001\n\017COMFuncti"
      "onCall\022\020\n\010function\030\001 \001(\t\022\017\n\007pointer\030\002 \001("
      "\r\022\r\n\005index\030\003 \001(\r\022#\n\004type\030\004 \001(\0162\025.BERTBuf"
      "fers.CallType\022(\n\targuments\030\005 \003(\0132\025.BERTB"
      "uffers.Variable\"E\n\007Console\022\016\n\004text\030\001 \001(\t"
      "H\000\022\r\n\003err\030\002 \001(\tH\000\022\020\n\006prompt\030\003 \001(\tH\000B\t\n\007m"
      "essage\"\327\002\n\014CallResponse\022\n\n\002id\030\001 \001(\r\022\014\n\004w"
      "ait\030\002 \001(\010\022\r\n\003err\030\003 \001(\tH\000\022\'\n\006result\030\004 \001(\013"
      "2\025.BERTBuffers.VariableH\000\022\'\n\007console\030\005 \001"
      "(\0132\024.BERTBuffers.ConsoleH\000\022!\n\004code\030\006 \001(\013"
      "2\021.BERTBuffers.CodeH\000\022\027\n\rshell_command\030\007"
      " \001(\tH\000\022\031\n\017control_message\030\010 \001(\tH\000\0222\n\rfun"
      "ction_call\030\t \001(\0132\031.BERTBuffers.FunctionC"
      "allH\000\0224\n\014com_callback\030\n \001(\0132\034.BERTBuffer"
      "s.COMFunctionCallH\000B\013\n\toperation*N\n\tErro"
      "rType\022\013\n\007GENERIC\020\000\022\006\n\002NA\020\001\022\007\n\003INF\020\002\022\t\n\005P"
      "ARSE\020\003\022\r\n\tEXECUTION\020\004\022\t\n\005OTHER\020\017*7\n\010Call"
      "Type\022\r\n\tundefined\020\000\022\007\n\003get\020\001\022\007\n\003put\020\002\022\n\n"
      "\006method\020\003B\002H\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1461);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "variable.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_variable_2eproto
namespace BERTBuffers {
const ::google::protobuf::EnumDescriptor* ErrorType_descriptor() {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_variable_2eproto::file_level_enum_descriptors[0];
}
bool ErrorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CallType_descriptor() {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_variable_2eproto::file_level_enum_descriptors[1];
}
bool CallType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Complex::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Complex::kRFieldNumber;
const int Complex::kIFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Complex::Complex()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsComplex();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.Complex)
}
Complex::Complex(const Complex& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&r_, &from.r_,
    static_cast<size_t>(reinterpret_cast<char*>(&i_) -
    reinterpret_cast<char*>(&r_)) + sizeof(i_));
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.Complex)
}

void Complex::SharedCtor() {
  ::memset(&r_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&i_) -
      reinterpret_cast<char*>(&r_)) + sizeof(i_));
  _cached_size_ = 0;
}

Complex::~Complex() {
  // @@protoc_insertion_point(destructor:BERTBuffers.Complex)
  SharedDtor();
}

void Complex::SharedDtor() {
}

void Complex::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Complex::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Complex& Complex::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsComplex();
  return *internal_default_instance();
}

Complex* Complex::New(::google::protobuf::Arena* arena) const {
  Complex* n = new Complex;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Complex::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.Complex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&r_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&i_) -
      reinterpret_cast<char*>(&r_)) + sizeof(i_));
  _internal_metadata_.Clear();
}

bool Complex::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.Complex)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double r = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &r_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double i = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &i_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.Complex)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.Complex)
  return false;
#undef DO_
}

void Complex::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.Complex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double r = 1;
  if (this->r() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->r(), output);
  }

  // double i = 2;
  if (this->i() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->i(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.Complex)
}

::google::protobuf::uint8* Complex::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.Complex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double r = 1;
  if (this->r() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->r(), target);
  }

  // double i = 2;
  if (this->i() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->i(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.Complex)
  return target;
}

size_t Complex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.Complex)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double r = 1;
  if (this->r() != 0) {
    total_size += 1 + 8;
  }

  // double i = 2;
  if (this->i() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Complex::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.Complex)
  GOOGLE_DCHECK_NE(&from, this);
  const Complex* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Complex>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.Complex)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.Complex)
    MergeFrom(*source);
  }
}

void Complex::MergeFrom(const Complex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.Complex)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.r() != 0) {
    set_r(from.r());
  }
  if (from.i() != 0) {
    set_i(from.i());
  }
}

void Complex::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.Complex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Complex::CopyFrom(const Complex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.Complex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Complex::IsInitialized() const {
  return true;
}

void Complex::Swap(Complex* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Complex::InternalSwap(Complex* other) {
  using std::swap;
  swap(r_, other->r_);
  swap(i_, other->i_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Complex::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Array::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Array::kRowsFieldNumber;
const int Array::kColsFieldNumber;
const int Array::kDataFieldNumber;
const int Array::kRownamesFieldNumber;
const int Array::kColnamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Array::Array()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsArray();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.Array)
}
Array::Array(const Array& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_(from.data_),
      rownames_(from.rownames_),
      colnames_(from.colnames_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rows_, &from.rows_,
    static_cast<size_t>(reinterpret_cast<char*>(&cols_) -
    reinterpret_cast<char*>(&rows_)) + sizeof(cols_));
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.Array)
}

void Array::SharedCtor() {
  ::memset(&rows_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cols_) -
      reinterpret_cast<char*>(&rows_)) + sizeof(cols_));
  _cached_size_ = 0;
}

Array::~Array() {
  // @@protoc_insertion_point(destructor:BERTBuffers.Array)
  SharedDtor();
}

void Array::SharedDtor() {
}

void Array::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Array::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Array& Array::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsArray();
  return *internal_default_instance();
}

Array* Array::New(::google::protobuf::Arena* arena) const {
  Array* n = new Array;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Array::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.Array)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  rownames_.Clear();
  colnames_.Clear();
  ::memset(&rows_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cols_) -
      reinterpret_cast<char*>(&rows_)) + sizeof(cols_));
  _internal_metadata_.Clear();
}

bool Array::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.Array)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rows = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rows_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cols = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cols_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BERTBuffers.Variable data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string rownames = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_rownames()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rownames(this->rownames_size() - 1).data(),
            static_cast<int>(this->rownames(this->rownames_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.Array.rownames"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string colnames = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_colnames()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->colnames(this->colnames_size() - 1).data(),
            static_cast<int>(this->colnames(this->colnames_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.Array.colnames"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.Array)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.Array)
  return false;
#undef DO_
}

void Array::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.Array)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rows = 1;
  if (this->rows() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rows(), output);
  }

  // int32 cols = 2;
  if (this->cols() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cols(), output);
  }

  // repeated .BERTBuffers.Variable data = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(static_cast<int>(i)), output);
  }

  // repeated string rownames = 4;
  for (int i = 0, n = this->rownames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rownames(i).data(), static_cast<int>(this->rownames(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Array.rownames");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->rownames(i), output);
  }

  // repeated string colnames = 5;
  for (int i = 0, n = this->colnames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->colnames(i).data(), static_cast<int>(this->colnames(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Array.colnames");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->colnames(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.Array)
}

::google::protobuf::uint8* Array::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.Array)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rows = 1;
  if (this->rows() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rows(), target);
  }

  // int32 cols = 2;
  if (this->cols() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cols(), target);
  }

  // repeated .BERTBuffers.Variable data = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->data(static_cast<int>(i)), deterministic, target);
  }

  // repeated string rownames = 4;
  for (int i = 0, n = this->rownames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rownames(i).data(), static_cast<int>(this->rownames(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Array.rownames");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->rownames(i), target);
  }

  // repeated string colnames = 5;
  for (int i = 0, n = this->colnames_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->colnames(i).data(), static_cast<int>(this->colnames(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Array.colnames");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->colnames(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.Array)
  return target;
}

size_t Array::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.Array)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .BERTBuffers.Variable data = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data(static_cast<int>(i)));
    }
  }

  // repeated string rownames = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->rownames_size());
  for (int i = 0, n = this->rownames_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->rownames(i));
  }

  // repeated string colnames = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->colnames_size());
  for (int i = 0, n = this->colnames_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->colnames(i));
  }

  // int32 rows = 1;
  if (this->rows() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rows());
  }

  // int32 cols = 2;
  if (this->cols() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cols());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Array::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.Array)
  GOOGLE_DCHECK_NE(&from, this);
  const Array* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Array>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.Array)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.Array)
    MergeFrom(*source);
  }
}

void Array::MergeFrom(const Array& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.Array)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  rownames_.MergeFrom(from.rownames_);
  colnames_.MergeFrom(from.colnames_);
  if (from.rows() != 0) {
    set_rows(from.rows());
  }
  if (from.cols() != 0) {
    set_cols(from.cols());
  }
}

void Array::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.Array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Array::CopyFrom(const Array& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.Array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Array::IsInitialized() const {
  return true;
}

void Array::Swap(Array* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Array::InternalSwap(Array* other) {
  using std::swap;
  data_.InternalSwap(&other->data_);
  rownames_.InternalSwap(&other->rownames_);
  colnames_.InternalSwap(&other->colnames_);
  swap(rows_, other->rows_);
  swap(cols_, other->cols_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Array::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Error::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Error::kTypeFieldNumber;
const int Error::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Error::Error()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsError();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.Error)
}
Error::Error(const Error& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.Error)
}

void Error::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

Error::~Error() {
  // @@protoc_insertion_point(destructor:BERTBuffers.Error)
  SharedDtor();
}

void Error::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Error::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Error::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Error& Error::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsError();
  return *internal_default_instance();
}

Error* Error::New(::google::protobuf::Arena* arena) const {
  Error* n = new Error;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Error::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

bool Error::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.Error)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .BERTBuffers.ErrorType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::BERTBuffers::ErrorType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.Error.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.Error)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.Error)
  return false;
#undef DO_
}

void Error::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BERTBuffers.ErrorType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Error.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.Error)
}

::google::protobuf::uint8* Error::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .BERTBuffers.ErrorType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Error.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.Error)
  return target;
}

size_t Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.Error)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .BERTBuffers.ErrorType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Error::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.Error)
  GOOGLE_DCHECK_NE(&from, this);
  const Error* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Error>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.Error)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.Error)
    MergeFrom(*source);
  }
}

void Error::MergeFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.Error)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Error::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error::CopyFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error::IsInitialized() const {
  return true;
}

void Error::Swap(Error* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Error::InternalSwap(Error* other) {
  using std::swap;
  message_.Swap(&other->message_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Error::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SheetReference::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SheetReference::kStartRowFieldNumber;
const int SheetReference::kStartColumnFieldNumber;
const int SheetReference::kEndRowFieldNumber;
const int SheetReference::kEndColumnFieldNumber;
const int SheetReference::kSheetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SheetReference::SheetReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsSheetReference();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.SheetReference)
}
SheetReference::SheetReference(const SheetReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_row_, &from.start_row_,
    static_cast<size_t>(reinterpret_cast<char*>(&sheet_id_) -
    reinterpret_cast<char*>(&start_row_)) + sizeof(sheet_id_));
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.SheetReference)
}

void SheetReference::SharedCtor() {
  ::memset(&start_row_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sheet_id_) -
      reinterpret_cast<char*>(&start_row_)) + sizeof(sheet_id_));
  _cached_size_ = 0;
}

SheetReference::~SheetReference() {
  // @@protoc_insertion_point(destructor:BERTBuffers.SheetReference)
  SharedDtor();
}

void SheetReference::SharedDtor() {
}

void SheetReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SheetReference::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SheetReference& SheetReference::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsSheetReference();
  return *internal_default_instance();
}

SheetReference* SheetReference::New(::google::protobuf::Arena* arena) const {
  SheetReference* n = new SheetReference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SheetReference::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.SheetReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_row_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sheet_id_) -
      reinterpret_cast<char*>(&start_row_)) + sizeof(sheet_id_));
  _internal_metadata_.Clear();
}

bool SheetReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.SheetReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 start_row = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_row_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 start_column = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_column_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 end_row = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &end_row_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 end_column = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &end_column_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sheet_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sheet_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.SheetReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.SheetReference)
  return false;
#undef DO_
}

void SheetReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.SheetReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 start_row = 1;
  if (this->start_row() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->start_row(), output);
  }

  // uint32 start_column = 2;
  if (this->start_column() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->start_column(), output);
  }

  // uint32 end_row = 3;
  if (this->end_row() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->end_row(), output);
  }

  // uint32 end_column = 4;
  if (this->end_column() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->end_column(), output);
  }

  // uint64 sheet_id = 5;
  if (this->sheet_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->sheet_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.SheetReference)
}

::google::protobuf::uint8* SheetReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.SheetReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 start_row = 1;
  if (this->start_row() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->start_row(), target);
  }

  // uint32 start_column = 2;
  if (this->start_column() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->start_column(), target);
  }

  // uint32 end_row = 3;
  if (this->end_row() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->end_row(), target);
  }

  // uint32 end_column = 4;
  if (this->end_column() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->end_column(), target);
  }

  // uint64 sheet_id = 5;
  if (this->sheet_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->sheet_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.SheetReference)
  return target;
}

size_t SheetReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.SheetReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 start_row = 1;
  if (this->start_row() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->start_row());
  }

  // uint32 start_column = 2;
  if (this->start_column() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->start_column());
  }

  // uint32 end_row = 3;
  if (this->end_row() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->end_row());
  }

  // uint32 end_column = 4;
  if (this->end_column() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->end_column());
  }

  // uint64 sheet_id = 5;
  if (this->sheet_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sheet_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SheetReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.SheetReference)
  GOOGLE_DCHECK_NE(&from, this);
  const SheetReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SheetReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.SheetReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.SheetReference)
    MergeFrom(*source);
  }
}

void SheetReference::MergeFrom(const SheetReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.SheetReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start_row() != 0) {
    set_start_row(from.start_row());
  }
  if (from.start_column() != 0) {
    set_start_column(from.start_column());
  }
  if (from.end_row() != 0) {
    set_end_row(from.end_row());
  }
  if (from.end_column() != 0) {
    set_end_column(from.end_column());
  }
  if (from.sheet_id() != 0) {
    set_sheet_id(from.sheet_id());
  }
}

void SheetReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.SheetReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SheetReference::CopyFrom(const SheetReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.SheetReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SheetReference::IsInitialized() const {
  return true;
}

void SheetReference::Swap(SheetReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SheetReference::InternalSwap(SheetReference* other) {
  using std::swap;
  swap(start_row_, other->start_row_);
  swap(start_column_, other->start_column_);
  swap(end_row_, other->end_row_);
  swap(end_column_, other->end_column_);
  swap(sheet_id_, other->sheet_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SheetReference::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Variable::InitAsDefaultInstance() {
  ::BERTBuffers::_Variable_default_instance_.nil_ = false;
  ::BERTBuffers::_Variable_default_instance_.missing_ = false;
  ::BERTBuffers::_Variable_default_instance_.err_ = const_cast< ::BERTBuffers::Error*>(
      ::BERTBuffers::Error::internal_default_instance());
  ::BERTBuffers::_Variable_default_instance_.num_ = 0;
  ::BERTBuffers::_Variable_default_instance_.str_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::BERTBuffers::_Variable_default_instance_.boolean_ = false;
  ::BERTBuffers::_Variable_default_instance_.cpx_ = const_cast< ::BERTBuffers::Complex*>(
      ::BERTBuffers::Complex::internal_default_instance());
  ::BERTBuffers::_Variable_default_instance_.arr_ = const_cast< ::BERTBuffers::Array*>(
      ::BERTBuffers::Array::internal_default_instance());
  ::BERTBuffers::_Variable_default_instance_.ref_ = const_cast< ::BERTBuffers::SheetReference*>(
      ::BERTBuffers::SheetReference::internal_default_instance());
  ::BERTBuffers::_Variable_default_instance_.external_pointer_ = GOOGLE_ULONGLONG(0);
}
void Variable::set_allocated_err(::BERTBuffers::Error* err) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (err) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      err = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, err, submessage_arena);
    }
    set_has_err();
    value_.err_ = err;
  }
  // @@protoc_insertion_point(field_set_allocated:BERTBuffers.Variable.err)
}
void Variable::set_allocated_cpx(::BERTBuffers::Complex* cpx) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (cpx) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cpx = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpx, submessage_arena);
    }
    set_has_cpx();
    value_.cpx_ = cpx;
  }
  // @@protoc_insertion_point(field_set_allocated:BERTBuffers.Variable.cpx)
}
void Variable::set_allocated_arr(::BERTBuffers::Array* arr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (arr) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      arr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, arr, submessage_arena);
    }
    set_has_arr();
    value_.arr_ = arr;
  }
  // @@protoc_insertion_point(field_set_allocated:BERTBuffers.Variable.arr)
}
void Variable::set_allocated_ref(::BERTBuffers::SheetReference* ref) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (ref) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ref = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ref, submessage_arena);
    }
    set_has_ref();
    value_.ref_ = ref;
  }
  // @@protoc_insertion_point(field_set_allocated:BERTBuffers.Variable.ref)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Variable::kNilFieldNumber;
const int Variable::kMissingFieldNumber;
const int Variable::kErrFieldNumber;
const int Variable::kNumFieldNumber;
const int Variable::kStrFieldNumber;
const int Variable::kBooleanFieldNumber;
const int Variable::kCpxFieldNumber;
const int Variable::kArrFieldNumber;
const int Variable::kRefFieldNumber;
const int Variable::kExternalPointerFieldNumber;
const int Variable::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Variable::Variable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsArray();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.Variable)
}
Variable::Variable(const Variable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  clear_has_value();
  switch (from.value_case()) {
    case kNil: {
      set_nil(from.nil());
      break;
    }
    case kMissing: {
      set_missing(from.missing());
      break;
    }
    case kErr: {
      mutable_err()->::BERTBuffers::Error::MergeFrom(from.err());
      break;
    }
    case kNum: {
      set_num(from.num());
      break;
    }
    case kStr: {
      set_str(from.str());
      break;
    }
    case kBoolean: {
      set_boolean(from.boolean());
      break;
    }
    case kCpx: {
      mutable_cpx()->::BERTBuffers::Complex::MergeFrom(from.cpx());
      break;
    }
    case kArr: {
      mutable_arr()->::BERTBuffers::Array::MergeFrom(from.arr());
      break;
    }
    case kRef: {
      mutable_ref()->::BERTBuffers::SheetReference::MergeFrom(from.ref());
      break;
    }
    case kExternalPointer: {
      set_external_pointer(from.external_pointer());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.Variable)
}

void Variable::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
  _cached_size_ = 0;
}

Variable::~Variable() {
  // @@protoc_insertion_point(destructor:BERTBuffers.Variable)
  SharedDtor();
}

void Variable::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_value()) {
    clear_value();
  }
}

void Variable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Variable::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Variable& Variable::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsArray();
  return *internal_default_instance();
}

Variable* Variable::New(::google::protobuf::Arena* arena) const {
  Variable* n = new Variable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Variable::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:BERTBuffers.Variable)
  switch (value_case()) {
    case kNil: {
      // No need to clear
      break;
    }
    case kMissing: {
      // No need to clear
      break;
    }
    case kErr: {
      delete value_.err_;
      break;
    }
    case kNum: {
      // No need to clear
      break;
    }
    case kStr: {
      value_.str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kBoolean: {
      // No need to clear
      break;
    }
    case kCpx: {
      delete value_.cpx_;
      break;
    }
    case kArr: {
      delete value_.arr_;
      break;
    }
    case kRef: {
      delete value_.ref_;
      break;
    }
    case kExternalPointer: {
      // No need to clear
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void Variable::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.Variable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_value();
  _internal_metadata_.Clear();
}

bool Variable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.Variable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool nil = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.nil_)));
          set_has_nil();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool missing = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.missing_)));
          set_has_missing();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.Error err = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_err()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double num = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_.num_)));
          set_has_num();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string str = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str().data(), static_cast<int>(this->str().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.Variable.str"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool boolean = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.boolean_)));
          set_has_boolean();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.Complex cpx = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cpx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.Array arr = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_arr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.SheetReference ref = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 external_pointer = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_.external_pointer_)));
          set_has_external_pointer();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.Variable.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.Variable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.Variable)
  return false;
#undef DO_
}

void Variable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.Variable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool nil = 1;
  if (has_nil()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->nil(), output);
  }

  // bool missing = 2;
  if (has_missing()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->missing(), output);
  }

  // .BERTBuffers.Error err = 3;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *value_.err_, output);
  }

  // double num = 4;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->num(), output);
  }

  // string str = 5;
  if (has_str()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Variable.str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->str(), output);
  }

  // bool boolean = 6;
  if (has_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->boolean(), output);
  }

  // .BERTBuffers.Complex cpx = 7;
  if (has_cpx()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *value_.cpx_, output);
  }

  // .BERTBuffers.Array arr = 8;
  if (has_arr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *value_.arr_, output);
  }

  // .BERTBuffers.SheetReference ref = 9;
  if (has_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *value_.ref_, output);
  }

  // uint64 external_pointer = 10;
  if (has_external_pointer()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->external_pointer(), output);
  }

  // string name = 15;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Variable.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.Variable)
}

::google::protobuf::uint8* Variable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.Variable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool nil = 1;
  if (has_nil()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->nil(), target);
  }

  // bool missing = 2;
  if (has_missing()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->missing(), target);
  }

  // .BERTBuffers.Error err = 3;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *value_.err_, deterministic, target);
  }

  // double num = 4;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->num(), target);
  }

  // string str = 5;
  if (has_str()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Variable.str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->str(), target);
  }

  // bool boolean = 6;
  if (has_boolean()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->boolean(), target);
  }

  // .BERTBuffers.Complex cpx = 7;
  if (has_cpx()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *value_.cpx_, deterministic, target);
  }

  // .BERTBuffers.Array arr = 8;
  if (has_arr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *value_.arr_, deterministic, target);
  }

  // .BERTBuffers.SheetReference ref = 9;
  if (has_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *value_.ref_, deterministic, target);
  }

  // uint64 external_pointer = 10;
  if (has_external_pointer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->external_pointer(), target);
  }

  // string name = 15;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Variable.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.Variable)
  return target;
}

size_t Variable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.Variable)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 15;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  switch (value_case()) {
    // bool nil = 1;
    case kNil: {
      total_size += 1 + 1;
      break;
    }
    // bool missing = 2;
    case kMissing: {
      total_size += 1 + 1;
      break;
    }
    // .BERTBuffers.Error err = 3;
    case kErr: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.err_);
      break;
    }
    // double num = 4;
    case kNum: {
      total_size += 1 + 8;
      break;
    }
    // string str = 5;
    case kStr: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str());
      break;
    }
    // bool boolean = 6;
    case kBoolean: {
      total_size += 1 + 1;
      break;
    }
    // .BERTBuffers.Complex cpx = 7;
    case kCpx: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.cpx_);
      break;
    }
    // .BERTBuffers.Array arr = 8;
    case kArr: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.arr_);
      break;
    }
    // .BERTBuffers.SheetReference ref = 9;
    case kRef: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.ref_);
      break;
    }
    // uint64 external_pointer = 10;
    case kExternalPointer: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->external_pointer());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Variable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.Variable)
  GOOGLE_DCHECK_NE(&from, this);
  const Variable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Variable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.Variable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.Variable)
    MergeFrom(*source);
  }
}

void Variable::MergeFrom(const Variable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.Variable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  switch (from.value_case()) {
    case kNil: {
      set_nil(from.nil());
      break;
    }
    case kMissing: {
      set_missing(from.missing());
      break;
    }
    case kErr: {
      mutable_err()->::BERTBuffers::Error::MergeFrom(from.err());
      break;
    }
    case kNum: {
      set_num(from.num());
      break;
    }
    case kStr: {
      set_str(from.str());
      break;
    }
    case kBoolean: {
      set_boolean(from.boolean());
      break;
    }
    case kCpx: {
      mutable_cpx()->::BERTBuffers::Complex::MergeFrom(from.cpx());
      break;
    }
    case kArr: {
      mutable_arr()->::BERTBuffers::Array::MergeFrom(from.arr());
      break;
    }
    case kRef: {
      mutable_ref()->::BERTBuffers::SheetReference::MergeFrom(from.ref());
      break;
    }
    case kExternalPointer: {
      set_external_pointer(from.external_pointer());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void Variable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.Variable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Variable::CopyFrom(const Variable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.Variable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Variable::IsInitialized() const {
  return true;
}

void Variable::Swap(Variable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Variable::InternalSwap(Variable* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Variable::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Code::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Code::kLineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Code::Code()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsCode();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.Code)
}
Code::Code(const Code& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      line_(from.line_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.Code)
}

void Code::SharedCtor() {
  _cached_size_ = 0;
}

Code::~Code() {
  // @@protoc_insertion_point(destructor:BERTBuffers.Code)
  SharedDtor();
}

void Code::SharedDtor() {
}

void Code::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Code::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Code& Code::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsCode();
  return *internal_default_instance();
}

Code* Code::New(::google::protobuf::Arena* arena) const {
  Code* n = new Code;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Code::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.Code)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  line_.Clear();
  _internal_metadata_.Clear();
}

bool Code::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.Code)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string line = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_line()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->line(this->line_size() - 1).data(),
            static_cast<int>(this->line(this->line_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.Code.line"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.Code)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.Code)
  return false;
#undef DO_
}

void Code::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.Code)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string line = 1;
  for (int i = 0, n = this->line_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->line(i).data(), static_cast<int>(this->line(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Code.line");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->line(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.Code)
}

::google::protobuf::uint8* Code::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.Code)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string line = 1;
  for (int i = 0, n = this->line_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->line(i).data(), static_cast<int>(this->line(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Code.line");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->line(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.Code)
  return target;
}

size_t Code::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.Code)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string line = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->line_size());
  for (int i = 0, n = this->line_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->line(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Code::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.Code)
  GOOGLE_DCHECK_NE(&from, this);
  const Code* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Code>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.Code)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.Code)
    MergeFrom(*source);
  }
}

void Code::MergeFrom(const Code& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.Code)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  line_.MergeFrom(from.line_);
}

void Code::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.Code)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Code::CopyFrom(const Code& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.Code)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Code::IsInitialized() const {
  return true;
}

void Code::Swap(Code* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Code::InternalSwap(Code* other) {
  using std::swap;
  line_.InternalSwap(&other->line_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Code::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FunctionCall::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FunctionCall::kFunctionFieldNumber;
const int FunctionCall::kArgumentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FunctionCall::FunctionCall()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsFunctionCall();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.FunctionCall)
}
FunctionCall::FunctionCall(const FunctionCall& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      arguments_(from.arguments_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.function().size() > 0) {
    function_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_);
  }
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.FunctionCall)
}

void FunctionCall::SharedCtor() {
  function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

FunctionCall::~FunctionCall() {
  // @@protoc_insertion_point(destructor:BERTBuffers.FunctionCall)
  SharedDtor();
}

void FunctionCall::SharedDtor() {
  function_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FunctionCall::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FunctionCall::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FunctionCall& FunctionCall::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsFunctionCall();
  return *internal_default_instance();
}

FunctionCall* FunctionCall::New(::google::protobuf::Arena* arena) const {
  FunctionCall* n = new FunctionCall;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FunctionCall::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.FunctionCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arguments_.Clear();
  function_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool FunctionCall::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.FunctionCall)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string function = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_function()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->function().data(), static_cast<int>(this->function().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.FunctionCall.function"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BERTBuffers.Variable arguments = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_arguments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.FunctionCall)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.FunctionCall)
  return false;
#undef DO_
}

void FunctionCall::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.FunctionCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string function = 1;
  if (this->function().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function().data(), static_cast<int>(this->function().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.FunctionCall.function");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->function(), output);
  }

  // repeated .BERTBuffers.Variable arguments = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->arguments(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.FunctionCall)
}

::google::protobuf::uint8* FunctionCall::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.FunctionCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string function = 1;
  if (this->function().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function().data(), static_cast<int>(this->function().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.FunctionCall.function");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->function(), target);
  }

  // repeated .BERTBuffers.Variable arguments = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->arguments(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.FunctionCall)
  return target;
}

size_t FunctionCall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.FunctionCall)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .BERTBuffers.Variable arguments = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->arguments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arguments(static_cast<int>(i)));
    }
  }

  // string function = 1;
  if (this->function().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->function());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FunctionCall::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.FunctionCall)
  GOOGLE_DCHECK_NE(&from, this);
  const FunctionCall* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FunctionCall>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.FunctionCall)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.FunctionCall)
    MergeFrom(*source);
  }
}

void FunctionCall::MergeFrom(const FunctionCall& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.FunctionCall)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arguments_.MergeFrom(from.arguments_);
  if (from.function().size() > 0) {

    function_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_);
  }
}

void FunctionCall::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.FunctionCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionCall::CopyFrom(const FunctionCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.FunctionCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionCall::IsInitialized() const {
  return true;
}

void FunctionCall::Swap(FunctionCall* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FunctionCall::InternalSwap(FunctionCall* other) {
  using std::swap;
  arguments_.InternalSwap(&other->arguments_);
  function_.Swap(&other->function_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FunctionCall::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void COMFunctionCall::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int COMFunctionCall::kFunctionFieldNumber;
const int COMFunctionCall::kPointerFieldNumber;
const int COMFunctionCall::kIndexFieldNumber;
const int COMFunctionCall::kTypeFieldNumber;
const int COMFunctionCall::kArgumentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

COMFunctionCall::COMFunctionCall()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsCOMFunctionCall();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.COMFunctionCall)
}
COMFunctionCall::COMFunctionCall(const COMFunctionCall& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      arguments_(from.arguments_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.function().size() > 0) {
    function_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_);
  }
  ::memcpy(&pointer_, &from.pointer_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&pointer_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.COMFunctionCall)
}

void COMFunctionCall::SharedCtor() {
  function_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pointer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&pointer_)) + sizeof(type_));
  _cached_size_ = 0;
}

COMFunctionCall::~COMFunctionCall() {
  // @@protoc_insertion_point(destructor:BERTBuffers.COMFunctionCall)
  SharedDtor();
}

void COMFunctionCall::SharedDtor() {
  function_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void COMFunctionCall::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* COMFunctionCall::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const COMFunctionCall& COMFunctionCall::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsCOMFunctionCall();
  return *internal_default_instance();
}

COMFunctionCall* COMFunctionCall::New(::google::protobuf::Arena* arena) const {
  COMFunctionCall* n = new COMFunctionCall;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void COMFunctionCall::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.COMFunctionCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arguments_.Clear();
  function_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pointer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&pointer_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool COMFunctionCall::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.COMFunctionCall)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string function = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_function()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->function().data(), static_cast<int>(this->function().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.COMFunctionCall.function"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pointer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pointer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.CallType type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::BERTBuffers::CallType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BERTBuffers.Variable arguments = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_arguments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.COMFunctionCall)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.COMFunctionCall)
  return false;
#undef DO_
}

void COMFunctionCall::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.COMFunctionCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string function = 1;
  if (this->function().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function().data(), static_cast<int>(this->function().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.COMFunctionCall.function");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->function(), output);
  }

  // uint32 pointer = 2;
  if (this->pointer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pointer(), output);
  }

  // uint32 index = 3;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->index(), output);
  }

  // .BERTBuffers.CallType type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // repeated .BERTBuffers.Variable arguments = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->arguments(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.COMFunctionCall)
}

::google::protobuf::uint8* COMFunctionCall::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.COMFunctionCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string function = 1;
  if (this->function().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function().data(), static_cast<int>(this->function().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.COMFunctionCall.function");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->function(), target);
  }

  // uint32 pointer = 2;
  if (this->pointer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pointer(), target);
  }

  // uint32 index = 3;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->index(), target);
  }

  // .BERTBuffers.CallType type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  // repeated .BERTBuffers.Variable arguments = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->arguments(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.COMFunctionCall)
  return target;
}

size_t COMFunctionCall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.COMFunctionCall)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .BERTBuffers.Variable arguments = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->arguments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arguments(static_cast<int>(i)));
    }
  }

  // string function = 1;
  if (this->function().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->function());
  }

  // uint32 pointer = 2;
  if (this->pointer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pointer());
  }

  // uint32 index = 3;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  // .BERTBuffers.CallType type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void COMFunctionCall::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.COMFunctionCall)
  GOOGLE_DCHECK_NE(&from, this);
  const COMFunctionCall* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const COMFunctionCall>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.COMFunctionCall)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.COMFunctionCall)
    MergeFrom(*source);
  }
}

void COMFunctionCall::MergeFrom(const COMFunctionCall& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.COMFunctionCall)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arguments_.MergeFrom(from.arguments_);
  if (from.function().size() > 0) {

    function_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_);
  }
  if (from.pointer() != 0) {
    set_pointer(from.pointer());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void COMFunctionCall::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.COMFunctionCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void COMFunctionCall::CopyFrom(const COMFunctionCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.COMFunctionCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool COMFunctionCall::IsInitialized() const {
  return true;
}

void COMFunctionCall::Swap(COMFunctionCall* other) {
  if (other == this) return;
  InternalSwap(other);
}
void COMFunctionCall::InternalSwap(COMFunctionCall* other) {
  using std::swap;
  arguments_.InternalSwap(&other->arguments_);
  function_.Swap(&other->function_);
  swap(pointer_, other->pointer_);
  swap(index_, other->index_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata COMFunctionCall::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Console::InitAsDefaultInstance() {
  ::BERTBuffers::_Console_default_instance_.text_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::BERTBuffers::_Console_default_instance_.err_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::BERTBuffers::_Console_default_instance_.prompt_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Console::kTextFieldNumber;
const int Console::kErrFieldNumber;
const int Console::kPromptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Console::Console()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsConsole();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.Console)
}
Console::Console(const Console& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_message();
  switch (from.message_case()) {
    case kText: {
      set_text(from.text());
      break;
    }
    case kErr: {
      set_err(from.err());
      break;
    }
    case kPrompt: {
      set_prompt(from.prompt());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.Console)
}

void Console::SharedCtor() {
  clear_has_message();
  _cached_size_ = 0;
}

Console::~Console() {
  // @@protoc_insertion_point(destructor:BERTBuffers.Console)
  SharedDtor();
}

void Console::SharedDtor() {
  if (has_message()) {
    clear_message();
  }
}

void Console::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Console::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Console& Console::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsConsole();
  return *internal_default_instance();
}

Console* Console::New(::google::protobuf::Arena* arena) const {
  Console* n = new Console;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Console::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:BERTBuffers.Console)
  switch (message_case()) {
    case kText: {
      message_.text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kErr: {
      message_.err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kPrompt: {
      message_.prompt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_NOT_SET;
}


void Console::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.Console)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message();
  _internal_metadata_.Clear();
}

bool Console::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.Console)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.Console.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string err = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->err().data(), static_cast<int>(this->err().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.Console.err"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string prompt = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prompt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->prompt().data(), static_cast<int>(this->prompt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.Console.prompt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.Console)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.Console)
  return false;
#undef DO_
}

void Console::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.Console)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (has_text()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Console.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->err().data(), static_cast<int>(this->err().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Console.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // string prompt = 3;
  if (has_prompt()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prompt().data(), static_cast<int>(this->prompt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Console.prompt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->prompt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.Console)
}

::google::protobuf::uint8* Console::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.Console)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (has_text()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Console.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->err().data(), static_cast<int>(this->err().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Console.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // string prompt = 3;
  if (has_prompt()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prompt().data(), static_cast<int>(this->prompt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.Console.prompt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->prompt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.Console)
  return target;
}

size_t Console::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.Console)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (message_case()) {
    // string text = 1;
    case kText: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
      break;
    }
    // string err = 2;
    case kErr: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
      break;
    }
    // string prompt = 3;
    case kPrompt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->prompt());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Console::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.Console)
  GOOGLE_DCHECK_NE(&from, this);
  const Console* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Console>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.Console)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.Console)
    MergeFrom(*source);
  }
}

void Console::MergeFrom(const Console& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.Console)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.message_case()) {
    case kText: {
      set_text(from.text());
      break;
    }
    case kErr: {
      set_err(from.err());
      break;
    }
    case kPrompt: {
      set_prompt(from.prompt());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
}

void Console::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.Console)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Console::CopyFrom(const Console& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.Console)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Console::IsInitialized() const {
  return true;
}

void Console::Swap(Console* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Console::InternalSwap(Console* other) {
  using std::swap;
  swap(message_, other->message_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Console::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CallResponse::InitAsDefaultInstance() {
  ::BERTBuffers::_CallResponse_default_instance_.err_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::BERTBuffers::_CallResponse_default_instance_.result_ = const_cast< ::BERTBuffers::Variable*>(
      ::BERTBuffers::Variable::internal_default_instance());
  ::BERTBuffers::_CallResponse_default_instance_.console_ = const_cast< ::BERTBuffers::Console*>(
      ::BERTBuffers::Console::internal_default_instance());
  ::BERTBuffers::_CallResponse_default_instance_.code_ = const_cast< ::BERTBuffers::Code*>(
      ::BERTBuffers::Code::internal_default_instance());
  ::BERTBuffers::_CallResponse_default_instance_.shell_command_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::BERTBuffers::_CallResponse_default_instance_.control_message_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::BERTBuffers::_CallResponse_default_instance_.function_call_ = const_cast< ::BERTBuffers::FunctionCall*>(
      ::BERTBuffers::FunctionCall::internal_default_instance());
  ::BERTBuffers::_CallResponse_default_instance_.com_callback_ = const_cast< ::BERTBuffers::COMFunctionCall*>(
      ::BERTBuffers::COMFunctionCall::internal_default_instance());
}
void CallResponse::set_allocated_result(::BERTBuffers::Variable* result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_operation();
  if (result) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    set_has_result();
    operation_.result_ = result;
  }
  // @@protoc_insertion_point(field_set_allocated:BERTBuffers.CallResponse.result)
}
void CallResponse::set_allocated_console(::BERTBuffers::Console* console) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_operation();
  if (console) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      console = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, console, submessage_arena);
    }
    set_has_console();
    operation_.console_ = console;
  }
  // @@protoc_insertion_point(field_set_allocated:BERTBuffers.CallResponse.console)
}
void CallResponse::set_allocated_code(::BERTBuffers::Code* code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_operation();
  if (code) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, code, submessage_arena);
    }
    set_has_code();
    operation_.code_ = code;
  }
  // @@protoc_insertion_point(field_set_allocated:BERTBuffers.CallResponse.code)
}
void CallResponse::set_allocated_function_call(::BERTBuffers::FunctionCall* function_call) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_operation();
  if (function_call) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      function_call = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, function_call, submessage_arena);
    }
    set_has_function_call();
    operation_.function_call_ = function_call;
  }
  // @@protoc_insertion_point(field_set_allocated:BERTBuffers.CallResponse.function_call)
}
void CallResponse::set_allocated_com_callback(::BERTBuffers::COMFunctionCall* com_callback) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_operation();
  if (com_callback) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      com_callback = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, com_callback, submessage_arena);
    }
    set_has_com_callback();
    operation_.com_callback_ = com_callback;
  }
  // @@protoc_insertion_point(field_set_allocated:BERTBuffers.CallResponse.com_callback)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallResponse::kIdFieldNumber;
const int CallResponse::kWaitFieldNumber;
const int CallResponse::kErrFieldNumber;
const int CallResponse::kResultFieldNumber;
const int CallResponse::kConsoleFieldNumber;
const int CallResponse::kCodeFieldNumber;
const int CallResponse::kShellCommandFieldNumber;
const int CallResponse::kControlMessageFieldNumber;
const int CallResponse::kFunctionCallFieldNumber;
const int CallResponse::kComCallbackFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallResponse::CallResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_variable_2eproto::InitDefaultsCallResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BERTBuffers.CallResponse)
}
CallResponse::CallResponse(const CallResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&wait_) -
    reinterpret_cast<char*>(&id_)) + sizeof(wait_));
  clear_has_operation();
  switch (from.operation_case()) {
    case kErr: {
      set_err(from.err());
      break;
    }
    case kResult: {
      mutable_result()->::BERTBuffers::Variable::MergeFrom(from.result());
      break;
    }
    case kConsole: {
      mutable_console()->::BERTBuffers::Console::MergeFrom(from.console());
      break;
    }
    case kCode: {
      mutable_code()->::BERTBuffers::Code::MergeFrom(from.code());
      break;
    }
    case kShellCommand: {
      set_shell_command(from.shell_command());
      break;
    }
    case kControlMessage: {
      set_control_message(from.control_message());
      break;
    }
    case kFunctionCall: {
      mutable_function_call()->::BERTBuffers::FunctionCall::MergeFrom(from.function_call());
      break;
    }
    case kComCallback: {
      mutable_com_callback()->::BERTBuffers::COMFunctionCall::MergeFrom(from.com_callback());
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:BERTBuffers.CallResponse)
}

void CallResponse::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wait_) -
      reinterpret_cast<char*>(&id_)) + sizeof(wait_));
  clear_has_operation();
  _cached_size_ = 0;
}

CallResponse::~CallResponse() {
  // @@protoc_insertion_point(destructor:BERTBuffers.CallResponse)
  SharedDtor();
}

void CallResponse::SharedDtor() {
  if (has_operation()) {
    clear_operation();
  }
}

void CallResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CallResponse::descriptor() {
  ::protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CallResponse& CallResponse::default_instance() {
  ::protobuf_variable_2eproto::InitDefaultsCallResponse();
  return *internal_default_instance();
}

CallResponse* CallResponse::New(::google::protobuf::Arena* arena) const {
  CallResponse* n = new CallResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CallResponse::clear_operation() {
// @@protoc_insertion_point(one_of_clear_start:BERTBuffers.CallResponse)
  switch (operation_case()) {
    case kErr: {
      operation_.err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kResult: {
      delete operation_.result_;
      break;
    }
    case kConsole: {
      delete operation_.console_;
      break;
    }
    case kCode: {
      delete operation_.code_;
      break;
    }
    case kShellCommand: {
      operation_.shell_command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kControlMessage: {
      operation_.control_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kFunctionCall: {
      delete operation_.function_call_;
      break;
    }
    case kComCallback: {
      delete operation_.com_callback_;
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OPERATION_NOT_SET;
}


void CallResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:BERTBuffers.CallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wait_) -
      reinterpret_cast<char*>(&id_)) + sizeof(wait_));
  clear_operation();
  _internal_metadata_.Clear();
}

bool CallResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BERTBuffers.CallResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool wait = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &wait_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string err = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->err().data(), static_cast<int>(this->err().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.CallResponse.err"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.Variable result = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.Console console = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_console()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.Code code = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string shell_command = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shell_command()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shell_command().data(), static_cast<int>(this->shell_command().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.CallResponse.shell_command"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string control_message = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_control_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->control_message().data(), static_cast<int>(this->control_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "BERTBuffers.CallResponse.control_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.FunctionCall function_call = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_function_call()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BERTBuffers.COMFunctionCall com_callback = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_com_callback()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BERTBuffers.CallResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BERTBuffers.CallResponse)
  return false;
#undef DO_
}

void CallResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BERTBuffers.CallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // bool wait = 2;
  if (this->wait() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->wait(), output);
  }

  // string err = 3;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->err().data(), static_cast<int>(this->err().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.CallResponse.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->err(), output);
  }

  // .BERTBuffers.Variable result = 4;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *operation_.result_, output);
  }

  // .BERTBuffers.Console console = 5;
  if (has_console()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *operation_.console_, output);
  }

  // .BERTBuffers.Code code = 6;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *operation_.code_, output);
  }

  // string shell_command = 7;
  if (has_shell_command()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shell_command().data(), static_cast<int>(this->shell_command().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.CallResponse.shell_command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->shell_command(), output);
  }

  // string control_message = 8;
  if (has_control_message()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->control_message().data(), static_cast<int>(this->control_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.CallResponse.control_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->control_message(), output);
  }

  // .BERTBuffers.FunctionCall function_call = 9;
  if (has_function_call()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *operation_.function_call_, output);
  }

  // .BERTBuffers.COMFunctionCall com_callback = 10;
  if (has_com_callback()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *operation_.com_callback_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BERTBuffers.CallResponse)
}

::google::protobuf::uint8* CallResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BERTBuffers.CallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // bool wait = 2;
  if (this->wait() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->wait(), target);
  }

  // string err = 3;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->err().data(), static_cast<int>(this->err().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.CallResponse.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->err(), target);
  }

  // .BERTBuffers.Variable result = 4;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *operation_.result_, deterministic, target);
  }

  // .BERTBuffers.Console console = 5;
  if (has_console()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *operation_.console_, deterministic, target);
  }

  // .BERTBuffers.Code code = 6;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *operation_.code_, deterministic, target);
  }

  // string shell_command = 7;
  if (has_shell_command()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shell_command().data(), static_cast<int>(this->shell_command().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.CallResponse.shell_command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->shell_command(), target);
  }

  // string control_message = 8;
  if (has_control_message()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->control_message().data(), static_cast<int>(this->control_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "BERTBuffers.CallResponse.control_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->control_message(), target);
  }

  // .BERTBuffers.FunctionCall function_call = 9;
  if (has_function_call()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *operation_.function_call_, deterministic, target);
  }

  // .BERTBuffers.COMFunctionCall com_callback = 10;
  if (has_com_callback()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *operation_.com_callback_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BERTBuffers.CallResponse)
  return target;
}

size_t CallResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BERTBuffers.CallResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // bool wait = 2;
  if (this->wait() != 0) {
    total_size += 1 + 1;
  }

  switch (operation_case()) {
    // string err = 3;
    case kErr: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
      break;
    }
    // .BERTBuffers.Variable result = 4;
    case kResult: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *operation_.result_);
      break;
    }
    // .BERTBuffers.Console console = 5;
    case kConsole: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *operation_.console_);
      break;
    }
    // .BERTBuffers.Code code = 6;
    case kCode: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *operation_.code_);
      break;
    }
    // string shell_command = 7;
    case kShellCommand: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->shell_command());
      break;
    }
    // string control_message = 8;
    case kControlMessage: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->control_message());
      break;
    }
    // .BERTBuffers.FunctionCall function_call = 9;
    case kFunctionCall: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *operation_.function_call_);
      break;
    }
    // .BERTBuffers.COMFunctionCall com_callback = 10;
    case kComCallback: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *operation_.com_callback_);
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CallResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BERTBuffers.CallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CallResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CallResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BERTBuffers.CallResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BERTBuffers.CallResponse)
    MergeFrom(*source);
  }
}

void CallResponse::MergeFrom(const CallResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BERTBuffers.CallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.wait() != 0) {
    set_wait(from.wait());
  }
  switch (from.operation_case()) {
    case kErr: {
      set_err(from.err());
      break;
    }
    case kResult: {
      mutable_result()->::BERTBuffers::Variable::MergeFrom(from.result());
      break;
    }
    case kConsole: {
      mutable_console()->::BERTBuffers::Console::MergeFrom(from.console());
      break;
    }
    case kCode: {
      mutable_code()->::BERTBuffers::Code::MergeFrom(from.code());
      break;
    }
    case kShellCommand: {
      set_shell_command(from.shell_command());
      break;
    }
    case kControlMessage: {
      set_control_message(from.control_message());
      break;
    }
    case kFunctionCall: {
      mutable_function_call()->::BERTBuffers::FunctionCall::MergeFrom(from.function_call());
      break;
    }
    case kComCallback: {
      mutable_com_callback()->::BERTBuffers::COMFunctionCall::MergeFrom(from.com_callback());
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
}

void CallResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BERTBuffers.CallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallResponse::CopyFrom(const CallResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BERTBuffers.CallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallResponse::IsInitialized() const {
  return true;
}

void CallResponse::Swap(CallResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallResponse::InternalSwap(CallResponse* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(wait_, other->wait_);
  swap(operation_, other->operation_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CallResponse::GetMetadata() const {
  protobuf_variable_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_variable_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace BERTBuffers

// @@protoc_insertion_point(global_scope)
